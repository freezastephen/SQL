USE PARKS_AND_RECREATION;
SELECT* FROM parks_and_recreation;
SELECT *
 FROM parks_and_recreation.employee_demographics;
 SELECT FIRST_NAME,
 BIRTH_DATE,
 AGE 
 FROM parks_and_recreation.EMPLOYEE_DEMOGRAPHICS;
 ## WE CAN PERFORM CALCULATIONS WHILE SELECTIONG STATEMENT ITSELF PEDMAS
 SELECT FIRST_NAME,
 BIRTH_DATE,AGE,
 AGE+10,
 (AGE+10)*10
 FROM PARKS_AND_RECREATION.EMPLOYEE_DEMOGRAPHICS;
 SELECT DISTINCT( FIRST_NAME) #DISTINCT -KEYWORD TO DISPLAY UNIQUE VALUES
 FROM PARKS_AND_RECREATION.EMPLOYEE_DEMOGRAPHICS;
 SELECT DISTINCT GENDER
  FROM PARKS_AND_RECREATION.EMPLOYEE_DEMOGRAPHICS;
  SELECT DISTINCT GENDER,FIRST_NAME
   FROM PARKS_AND_RECREATION.EMPLOYEE_DEMOGRAPHICS;
   ##WHERE CLAUSE##
 ##WHERE CLAUSE IS USED TO RETURN ROW EITH SPECIFIC CONDITION
 SELECT * FROM EMPLOYEE_SALARY
 WHERE FIRST_NAME='JERRY';
 SELECT * FROM employee_salary 
 where salary<50000;
 SELECT * FROM 
 EMPLOYEE_DEMOGRAPHICS 
 WHERE GENDER='FEMALE';
 SELECT* FROM
 EMPLOYEE_DEMOGRAPHICS
 WHERE GENDER!='MALE';
 SELECT * FROM 
 EMPLOYEE_DEMOGRAPHICS 
 WHERE BIRTH_DATE>='1988-01-01';
 ##LOGICAL OPERATORS AND NOT
 SELECT *  FROM 
 EMPLOYEE_DEMOGRAPHICS
 WHERE BIRTH_DATE >='1984-01-01'
 AND GENDER='MALE';
 SELECT * FROM 
 EMPLOYEE_DEMOGRAPHICS 
 WHERE GENDER='MALE'
 AND AGE>40;
 SELECT * FROM EMPLOYEE_DEMOGRAPHICS 
 WHERE GENDER='FEMALE'
 OR AGE >40;
 ##LIKE STATEMENT- LOOKS FOR SPECIFIC CHARACTERS IN THE TABLE 
 ## % AND _
 SELECT * FROM
EMPLOYEE_DEMOGRAPHICS 
 WHERE FIRST_NAME='JER';
 SELECT * FROM EMPLOYEE_DEMOGRAPHICS 
 WHERE FIRST_NAME  LIKE 'JER%';
 SELECT * FROM EMPLOYEE_DEMOGRAPHICS 
 WHERE FIRST_NAME LIKE 'A%';
 SELECT * FROM EMPLOYEE_DEMOGRAPHICS 
 WHERE FIRST_NAME LIKE 'J____';
 ##GROUP BY
 SELECT  GENDER 
 FROM EMPLOYEE_DEMOGRAPHICS 
 GROUP BY GENDER ;
 SELECT GENDER , AVG(AGE)
 FROM EMPLOYEE_DEMOGRAPHICS
 GROUP BY GENDER;
 SELECT * FROM PARKS_AND_RECREATION.EMPLOYEE_DEMOGRAPHICS;
SELECT* FROM parks_and_recreation.employee_salary;
SELECT OCCUPATION,AVG(SALARY)
FROM EMPLOYEE_SALARY
GROUP BY OCCUPATION;
SELECT GENDER,MAX(AGE),AVG(AGE),MIN(AGE),COUNT(AGE)
FROM EMPLOYEE_DEMOGRAPHICS
GROUP BY GENDER;
SELECT MAX(SALARY),FIRST_NAME
FROM EMPLOYEE_SALARY 
GROUP BY SALARY,FIRST_NAME;

##ORDER BY-ORDER THE ROWS 
SELECT * 
FROM employee_demographics
ORDER BY first_name DESC;
SELECT* FROM 
employee_demographics
ORDER BY GENDER ,AGE ASC;


##HAVING VS WHERE
##HAVING COMES RYT AFTER GROUP BY
USE PARKS_AND_RECREATION;
SELECT GENDER,AVG(age)
FROM EMPLOYEE_DEMOGRAPHICS
GROUP BY GENDER
HAVING avg(AGE) >40;
select gender ,max(age)
from employee_demographics
group by gender 
having count(age)>40;
SELECT * FROM EMPLOYEE_SALARY;
SELECT OCCUPATION ,AVG(SALARY)
FROM EMPLOYEE_SALARY 
WHERE OCCUPATION  LIKE '%MANAGER%'
GROUP BY OCCUPATION 
HAVING AVG(SALARY)>50000;


###LIMIT AND ALIASING
##LIMIT -LIMIT THE CONTENTS
SELECT * FROM EMPLOYEE_DEMOGRAPHICS;
SELECT * FROM 
EMPLOYEE_DEMOGRAPHICS 
LIMIT 5;
SELECT *
FROM EMPLOYEE_DEMOGRAPHICS 
ORDER BY AGE ASC
LIMIT 3;
SELECT
* FROM  employee_demographics
ORDER BY AGE DESC 
LIMIT 3,2;
## AS IS THE KEYWORD TO REPRESENT THE COLOUMN NAMW THAT IS ASSINGNED FOR THE COLOUMN
SELECT GENDER, AVG(AGE) AS AVG_AGE 
FROM EMPLOYEE_DEMOGRAPHICS 
GROUP BY GENDER 
HAVING AVG_AGE>40;
###JOINS-- TWO TABLES OR MORE JOINED WITH SIMILAR COLUMNS 
SELECT * FROM employee_salary;
SELECT * FROM employee_demographics;
## INNER JOIN --  RETURN ROWS OF BOTH COLUMNS FROM BOTH TABLES; 
##IT DISPLAYS ONLY COMMON VALUES 
SELECT * FROM 
EMPLOYEE_DEMOGRAPHICS
INNER JOIN EMPLOYEE_SALARY
 ON EMPLOYEE_DEMOGRAPHICS.EMPLOYEE_ID=EMPLOYEE_SALARY.EMPLOYEE_ID;
 SELECT * FROM
 EMPLOYEE_DEMOGRAPHICS AS DEM
 INNER JOIN EMPLOYEE_SALARY AS SAL
  ON DEM.EMPLOYEE_ID=SAL.EMPLOYEE_ID;
  ##FOR CHOOSING PARTICULAR COLUMNS
  SELECT SAL.FIRST_NAME,DEM.EMPLOYEE_ID,OCCUPATION
  FROM EMPLOYEE_DEMOGRAPHICS AS DEM
  INNER JOIN EMPLOYEE_SALARY AS SAL
  ON DEM.EMPLOYEE_ID=SAL.EMPLOYEE_ID;
  ##LEFT JOIN
  SELECT * FROM 
  EMPLOYEE_DEMOGRAPHICS AS D
  LEFT JOIN EMPLOYEE_SALARY S
  ON D.EMPLOYEE_ID= S.EMPLOYEE_ID;
  SELECT 
  * FROM EMPLOYEE_DEMOGRAPHICS AS D 
  RIGHT JOIN EMPLOYEE_SALARY AS S
  ON D.EMPLOYEE_ID=S.EMPLOYEE_ID;
  ###SELF JOIN JOINING UTSELF
  SELECT 
  * FROM EMPLOYEE_SALARY EMP1
  JOIN EMPLOYEE_SALARY EMP2
  ON EMP1.EMPLOYEE_ID=EMP2.EMPLOYEE_ID;
  ##REALTIME EXAMPLE ==SECRET SANTA ASSIGNING
  SELECT EMP1.EMPLOYEE_ID ,EMP2.FIRST_NAME AS SECRET_SANTA
  FROM  EMPLOYEE_SALARY EMP1
  JOIN EMPLOYEE_SALARY EMP2
  ON EMP1.EMPLOYEE_ID+1=EMP2.EMPLOYEE_ID;
  SELECT * FROM 
  EMPLOYEE_DEMOGRAPHICS AS D
  INNER JOIN EMPLOYEE_SALARY AS S
  ON D.EMPLOYEE_ID=S.EMPLOYEE_ID
  INNER JOIN PARKS_DEPARTMENTS AS PD
  ON S.DEPT_ID=PD.DEPARTMENT_ID;
  ### UNIONS -- ITS DISPLAYS COMMON ROWS 
  SELECT
  FIRST_NAME,LAST_NAME FROM 
 EMPLOYEE_DEMOGRAPHICS
 UNION 
 SELECT  FIRST_NAME,LAST_NAME
 FROM EMPLOYEE_SALARY;
 SELECT
  FIRST_NAME,LAST_NAME FROM 
 EMPLOYEE_DEMOGRAPHICS
 UNION DISTINCT
 SELECT  FIRST_NAME,LAST_NAME
 FROM EMPLOYEE_SALARY; ### UNION DISTINCT
 SELECT
  FIRST_NAME,LAST_NAME FROM 
 EMPLOYEE_DEMOGRAPHICS
 UNION ALL
 SELECT  FIRST_NAME,LAST_NAME
 FROM EMPLOYEE_SALARY;### UNION ALL
 SELECT FIRST_NAME,GENDER ,
'OLD' AS LABLE 
FROM EMPLOYEE_DEMOGRAPHICS
 WHERE AGE>50;
 SELECT FIRST_NAME,LAST_NAME, 'OLD ' AS LABLE
 FROM EMPLOYEE_DEMOGRAPHICS 
 WHERE AGE>50
 UNION DISTINCT
 SELECT FIRST_NAME,LAST_NAME ,'HIGH PAID' AS  LABLE1
 FROM EMPLOYEE_SALARY
 WHERE SALARY>70000;
 
 SELECT FIRST_NAME,LAST_NAME, 'OLD MAN ' AS LABLE
 FROM EMPLOYEE_DEMOGRAPHICS 
 WHERE AGE>50 AND GENDER ='MALE'
 UNION 
 SELECT FIRST_NAME,LAST_NAME, 'OLD LADY ' AS LABLE
 FROM EMPLOYEE_DEMOGRAPHICS 
 WHERE AGE>40 AND GENDER='FEMALE' 
  UNION DISTINCT
 SELECT FIRST_NAME,LAST_NAME ,'HIGH PAID' AS  LABLE1
 FROM EMPLOYEE_SALARY
 WHERE SALARY>70000
 ORDER BY FIRST_NAME,LAST_NAME;
 ### STRING
 -- LENGTH OF TE STRING
 SELECT FIRST_NAME,LENGTH(FIRST_NAME) AS LENGTH
 FROM EMPLOYEE_DEMOGRAPHICS
  ORDER BY 2;
  SELECT UPPER('FREEZAsTEPhen');
  SELECT FIRST_NAME,upper(FIRST_NAME) AS upper
 FROM EMPLOYEE_DEMOGRAPHICS
  ORDER BY 2; 
  ##trim- get rid of spaces
  ##concat
  ##spliting of words
  SELECT FIRST_NAME,
  LAST_NAME ,
  CASE 
    WHEN AGE<30 THEN 'YOUNG'
    WHEN AGE BETWEEN 30 AND 40 THEN 'MID_AGED'
    WHEN AGE >40 THEN'OLD'
	END AS AGE_BARCKET
FROM EMPLOYEE_DEMOGRAPHICS;
## TASK
SELECT * FROM EMPLOYEE_SALARY;
SELECT* FROM PARKS_DEPARTMENTS;
SELECT FIRST_NAME,LAST_NAME,SALARY,
CASE 
   WHEN SALARY=50000 THEN SALARY
   WHEN SALARY<50000 THEN SALARY+(SALARY*1.05)
   WHEN SALARY>50000 THEN SALARY+(SALARY*1.07)
   WHEN DEPT_ID=6 THEN SALARY+(SALARY*1.10)
END AS SALARY_BONUS
FROM EMPLOYEE_SALARY;
SELECT* FROM EMPLOYEE_SALARY;
####SUB QUERIES

SELECT FIRST_NAME,SALARY,
 (SELECT AVG(SALARY) 
FROM EMPLOYEE_SALARY) AS AVG_SALARY 
FROM EMPLOYEE_SALARY;
SELECT
* FROM 
 ( SELECT AVG(AGE),MAX(AGE),MIN(AGE),COUNT(AGE)
 FROM EMPLOYEE_DEMOGRAPHICS
 GROUP BY GENDER) AS AGG_TABLE;
 ##WINDOW FUNCTION
 SELECT GENDER,AVG(SALARY)
 FROM EMPLOYEE_DEMOGRAPHICS AS D
  JOIN EMPLOYEE_SALARY AS S
      ON D.EMPLOYEE_ID=S.EMPLOYEE_ID
GROUP BY GENDER;
 SELECT GENDER,MAX(SALARY)
 FROM EMPLOYEE_DEMOGRAPHICS AS D
  JOIN EMPLOYEE_SALARY AS S
      ON D.EMPLOYEE_ID=S.EMPLOYEE_ID
GROUP BY GENDER;
###CTEs
##temp table
